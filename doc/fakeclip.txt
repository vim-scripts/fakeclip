*fakeclip.txt*	pseudo clipboard register for non-GUI version of Vim

Version 0.2.0
Copyright (C) 2007-2008 kana <http://whileimautomaton.net/>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*fakeclip-contents*

Introduction		|fakeclip-introduction|
Interface		|fakeclip-interface|
  Key Mappings		  |fakeclip-key-mappings|
Bugs			|fakeclip-bugs|
Changelog		|fakeclip-changelog|




==============================================================================
INTRODUCTION					*fakeclip-introduction*

Fakeclip is a Vim plugin to provide pseudo clipboard register (|quotestar| or
|quoteplus|) for non-GUI version of Vim on the following platforms:

- Cygwin
- Mac OS X




==============================================================================
INTERFACE					*fakeclip-interface*

------------------------------------------------------------------------------
KEY MAPPINGS					*fakeclip-key-mappings*

[count]<Plug>(fakeclip-y){motion}		*<Plug>(fakeclip-y)*
[count]<Plug>(fakeclip-Y)			*<Plug>(fakeclip-Y)*
{Visual}<Plug>(fakeclip-y)			*v_<Plug>(fakeclip-y)*
{Visual}<Plug>(fakeclip-Y)			*v_<Plug>(fakeclip-Y)*
			Same as |y| or |Y|, but yank into the clipboard.

[count]<Plug>(fakeclip-p)			*<Plug>(fakeclip-p)*
[count]<Plug>(fakeclip-P)			*<Plug>(fakeclip-P)*
[count]<Plug>(fakeclip-gp)			*<Plug>(fakeclip-gp)*
[count]<Plug>(fakeclip-gP)			*<Plug>(fakeclip-gP)*
			Same as |p|, |P|, |gp| or |gP|, but put from the
			clipboard.

						*i_<Plug>(fakeclip-insert)*
						*c_<Plug>(fakeclip-insert)*
<Plug>(fakeclip-insert)
			Insert the content of the clipboard like |i_CTRL-R|.
	

					  *g:fakeclip_no_default_key_mappings*
						*:FakeclipDefaultKeyMappings*
Fakeclip will define the following key mappings.  If you don't want to define
these default key mappings, define |g:fakeclip_no_default_key_mappings| before
this plugin is loaded (e.g. in your |vimrc|).  You can also use
|:FakeclipDefaultKeyMappings| to redefine these key mappings.  This command
doesn't override existing {lhs}s unless [!] is given.

	modes	{lhs}	{rhs}			~
	-----	------	-----------------------	~
	nv	"+y	<Plug>(fakeclip-y)
	nv	"*y	<Plug>(fakeclip-y)
	n	"+yy	<Plug>(fakeclip-Y)
	nv	"+Y	<Plug>(fakeclip-Y)
	nv	"*Y	<Plug>(fakeclip-Y)
	n	"*yy	<Plug>(fakeclip-Y)
	nv	"+p	<Plug>(fakeclip-p)
	nv	"*p	<Plug>(fakeclip-p)
	nv	"+P	<Plug>(fakeclip-P)
	nv	"*P	<Plug>(fakeclip-P)
	nv	"+gp	<Plug>(fakeclip-gp)
	nv	"*gp	<Plug>(fakeclip-gp)
	nv	"+gP	<Plug>(fakeclip-gP)
	nv	"*gP	<Plug>(fakeclip-gP)
	ic	<C-r>+	<Plug>(fakeclip-insert)
	ic	<C-r>*	<Plug>(fakeclip-insert)




==============================================================================
BUGS						*fakeclip-bugs*

(a) This plugin just provide pseudo clipboard register for ordinary editing.
So |getreg()|, |setreg()|, |expr-register| and other interface on clipboard
register are not supported.

(b) The characteristic (i.e., characterwise, linewise or blockwise) of the
clipboard content is not remembered.  It will be linewise if each line of the
clipboard content ends with a newline, otherwise it will be characterwise.

(c) Executing <Plug>(fakeclip-y) in Normal mode, the display of 'showcmd' is
different from the ordinary one.

(d) <Plug>(fakeclip-y) in Normal mode doesn't accept "y" as a linewise
{motion} like the built-in |y|.

(e) On Mac OS X, you have to set a proper value to the environment variable
__CF_USER_TEXT_ENCODING.  It caontins :-separated values and the 2nd value
means the character encoding which is used to translate string data between
GUI and Terminal.  For example, if you work on Terminal with UTF-8,
the 2nd value of __CF_USER_TEXT_ENCODING must be set to "0x08000100".  See the
following URI for the magic values to specify character encodings:

http://developer.apple.com/documentation/CoreFoundation/Reference/CFStringRef/




==============================================================================
CHANGELOG					*fakeclip-changelog*

0.2.0	2008-07-14T14:09:49+09:00
	- Rename as "fakeclip" (the old name is "cygclip").
	- Support Mac OS X.
	- Autoloaded.

0.1	2007-12-27T22:47:34+09:00
	- Modify to automatically define the default key mappings as this
	  plugin is loaded.  See |g:fakeclip_no_default_key_mappings| for how
	  to suppress this behavior.

0.0	2007-08-13
	- First release.




==============================================================================
vim:tw=78:ts=8:ft=help:norl:fdm=marker:
